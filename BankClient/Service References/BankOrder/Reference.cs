//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BankClient.BankOrder {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/BankDAL.Entities")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BankClient.BankOrder.Account[] AccountsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BankClient.BankOrder.Account[] Accounts {
            get {
                return this.AccountsField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountsField, value) != true)) {
                    this.AccountsField = value;
                    this.RaisePropertyChanged("Accounts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Firstname {
            get {
                return this.FirstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstnameField, value) != true)) {
                    this.FirstnameField = value;
                    this.RaisePropertyChanged("Firstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lastname {
            get {
                return this.LastnameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastnameField, value) != true)) {
                    this.LastnameField = value;
                    this.RaisePropertyChanged("Lastname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Account", Namespace="http://schemas.datacontract.org/2004/07/BankDAL.Entities")]
    [System.SerializableAttribute()]
    public partial class Account : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountNumber {
            get {
                return this.AccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNumberField, value) != true)) {
                    this.AccountNumberField = value;
                    this.RaisePropertyChanged("AccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BankOrder.IBankOrder")]
    public interface IBankOrder {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankOrder/Register", ReplyAction="http://tempuri.org/IBankOrder/RegisterResponse")]
        bool Register(string userName, string password, string emailAddress, string firstName, string lastName, string country, string region, string city, string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankOrder/Register", ReplyAction="http://tempuri.org/IBankOrder/RegisterResponse")]
        System.Threading.Tasks.Task<bool> RegisterAsync(string userName, string password, string emailAddress, string firstName, string lastName, string country, string region, string city, string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankOrder/Update", ReplyAction="http://tempuri.org/IBankOrder/UpdateResponse")]
        bool Update(string userName, string password, string emailAddress, string firstName, string lastName, string country, string region, string city, string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankOrder/Update", ReplyAction="http://tempuri.org/IBankOrder/UpdateResponse")]
        System.Threading.Tasks.Task<bool> UpdateAsync(string userName, string password, string emailAddress, string firstName, string lastName, string country, string region, string city, string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankOrder/Delete", ReplyAction="http://tempuri.org/IBankOrder/DeleteResponse")]
        bool Delete(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankOrder/Delete", ReplyAction="http://tempuri.org/IBankOrder/DeleteResponse")]
        System.Threading.Tasks.Task<bool> DeleteAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankOrder/Login", ReplyAction="http://tempuri.org/IBankOrder/LoginResponse")]
        System.Guid Login(BankClient.BankOrder.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankOrder/Login", ReplyAction="http://tempuri.org/IBankOrder/LoginResponse")]
        System.Threading.Tasks.Task<System.Guid> LoginAsync(BankClient.BankOrder.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankOrder/Logout", ReplyAction="http://tempuri.org/IBankOrder/LogoutResponse")]
        bool Logout(System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankOrder/Logout", ReplyAction="http://tempuri.org/IBankOrder/LogoutResponse")]
        System.Threading.Tasks.Task<bool> LogoutAsync(System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankOrder/GetAllAccounts", ReplyAction="http://tempuri.org/IBankOrder/GetAllAccountsResponse")]
        BankClient.BankOrder.Account[] GetAllAccounts(System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankOrder/GetAllAccounts", ReplyAction="http://tempuri.org/IBankOrder/GetAllAccountsResponse")]
        System.Threading.Tasks.Task<BankClient.BankOrder.Account[]> GetAllAccountsAsync(System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankOrder/GetAccountsByUser", ReplyAction="http://tempuri.org/IBankOrder/GetAccountsByUserResponse")]
        BankClient.BankOrder.Account[] GetAccountsByUser(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankOrder/GetAccountsByUser", ReplyAction="http://tempuri.org/IBankOrder/GetAccountsByUserResponse")]
        System.Threading.Tasks.Task<BankClient.BankOrder.Account[]> GetAccountsByUserAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankOrder/GetUserById", ReplyAction="http://tempuri.org/IBankOrder/GetUserByIdResponse")]
        BankClient.BankOrder.User GetUserById(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankOrder/GetUserById", ReplyAction="http://tempuri.org/IBankOrder/GetUserByIdResponse")]
        System.Threading.Tasks.Task<BankClient.BankOrder.User> GetUserByIdAsync(int Id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBankOrderChannel : BankClient.BankOrder.IBankOrder, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BankOrderClient : System.ServiceModel.ClientBase<BankClient.BankOrder.IBankOrder>, BankClient.BankOrder.IBankOrder {
        
        public BankOrderClient() {
        }
        
        public BankOrderClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BankOrderClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BankOrderClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BankOrderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Register(string userName, string password, string emailAddress, string firstName, string lastName, string country, string region, string city, string address) {
            return base.Channel.Register(userName, password, emailAddress, firstName, lastName, country, region, city, address);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterAsync(string userName, string password, string emailAddress, string firstName, string lastName, string country, string region, string city, string address) {
            return base.Channel.RegisterAsync(userName, password, emailAddress, firstName, lastName, country, region, city, address);
        }
        
        public bool Update(string userName, string password, string emailAddress, string firstName, string lastName, string country, string region, string city, string address) {
            return base.Channel.Update(userName, password, emailAddress, firstName, lastName, country, region, city, address);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateAsync(string userName, string password, string emailAddress, string firstName, string lastName, string country, string region, string city, string address) {
            return base.Channel.UpdateAsync(userName, password, emailAddress, firstName, lastName, country, region, city, address);
        }
        
        public bool Delete(string username) {
            return base.Channel.Delete(username);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAsync(string username) {
            return base.Channel.DeleteAsync(username);
        }
        
        public System.Guid Login(BankClient.BankOrder.User user) {
            return base.Channel.Login(user);
        }
        
        public System.Threading.Tasks.Task<System.Guid> LoginAsync(BankClient.BankOrder.User user) {
            return base.Channel.LoginAsync(user);
        }
        
        public bool Logout(System.Guid guid) {
            return base.Channel.Logout(guid);
        }
        
        public System.Threading.Tasks.Task<bool> LogoutAsync(System.Guid guid) {
            return base.Channel.LogoutAsync(guid);
        }
        
        public BankClient.BankOrder.Account[] GetAllAccounts(System.Guid guid) {
            return base.Channel.GetAllAccounts(guid);
        }
        
        public System.Threading.Tasks.Task<BankClient.BankOrder.Account[]> GetAllAccountsAsync(System.Guid guid) {
            return base.Channel.GetAllAccountsAsync(guid);
        }
        
        public BankClient.BankOrder.Account[] GetAccountsByUser(string username) {
            return base.Channel.GetAccountsByUser(username);
        }
        
        public System.Threading.Tasks.Task<BankClient.BankOrder.Account[]> GetAccountsByUserAsync(string username) {
            return base.Channel.GetAccountsByUserAsync(username);
        }
        
        public BankClient.BankOrder.User GetUserById(int Id) {
            return base.Channel.GetUserById(Id);
        }
        
        public System.Threading.Tasks.Task<BankClient.BankOrder.User> GetUserByIdAsync(int Id) {
            return base.Channel.GetUserByIdAsync(Id);
        }
    }
}
